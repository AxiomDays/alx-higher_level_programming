The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

# test_sum.txt

Importing the function from the module:
	>>> add_integer = __import__("0-add_integer").add_integer

Add two integers.

Parameters:
- a (int): The first integer.
- b (int): The second integer.

Returns:
int: The sum of a and b.

Examples:
>>> add_integer(2, 3)
5

>>> add_integer(-1, 5)
4

>>> add_integer(0, 0)
0

>>> add_integer(2.1, 4)
6
>>> add_integer(5, 7.8)
12

>>> add_integer(2.45, 3.1)
5
>>> [add_integer(i, i ** 2) for i in range(6)]
[0, 2, 6, 12, 20, 30]

>>> add_integer(1, float('nan'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer

>>> add_integer(1, float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer

>>> add_integer(999999999999999999999999999999, 1)
1000000000000000000000000000000

>>> add_integer([1], 2)
Traceback (most recent call last):
...
TypeError: a must be an integer
